//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/_TheForest/Settings/GameInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInput"",
    ""maps"": [
        {
            ""name"": ""Controller"",
            ""id"": ""df0f298a-596a-4dbd-94a6-11715a9d3d6a"",
            ""actions"": [
                {
                    ""name"": ""LeftSecondaryButton"",
                    ""type"": ""Button"",
                    ""id"": ""20f02920-e856-4473-9550-41654af078ce"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightSecondaryButton"",
                    ""type"": ""Button"",
                    ""id"": ""7efcf817-e7ca-4d73-b481-0d5ecc86040c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftPrimaryButton"",
                    ""type"": ""Button"",
                    ""id"": ""5cdba481-a85e-44f1-b226-b976fc517bf5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightPrimaryButton"",
                    ""type"": ""Button"",
                    ""id"": ""85da19c8-280d-4fdd-9c23-425e9bd44529"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MenuButton"",
                    ""type"": ""Button"",
                    ""id"": ""41491d98-36fa-4326-8a5a-150e5b89644f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6a6ffda2-d117-460a-ab90-1ac88284d393"",
                    ""path"": ""<PXR_Controller>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftSecondaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""564c43db-965a-4aa9-a460-e07fc3a308d3"",
                    ""path"": ""<XRSimulatedController>{LeftHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftSecondaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bd1d224e-39fb-4c7f-a84f-9cd17b618a10"",
                    ""path"": ""*/{MenuButton}"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MenuButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""44e8fa78-d8e3-45ae-a722-c2ad88e7e805"",
                    ""path"": ""<PXR_Controller>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftPrimaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0980fa96-98a6-4e8e-a2a2-e01f641e4c0e"",
                    ""path"": ""<XRSimulatedController>{LeftHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftPrimaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0eac659c-7b93-42f7-b2c8-6580a9d1b014"",
                    ""path"": ""<PXR_Controller>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightSecondaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2a1fdff0-d2ca-4c2a-969b-b5f29eb89c21"",
                    ""path"": ""<XRSimulatedController>{RightHand}/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightSecondaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""55b72cbc-3e81-4cd0-8d17-4d684736f1a2"",
                    ""path"": ""<PXR_Controller>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightPrimaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6499c091-e54c-4c0a-92d1-e5dc7834b11d"",
                    ""path"": ""<XRSimulatedController>{RightHand}/primaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RightPrimaryButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Controller
        m_Controller = asset.FindActionMap("Controller", throwIfNotFound: true);
        m_Controller_LeftSecondaryButton = m_Controller.FindAction("LeftSecondaryButton", throwIfNotFound: true);
        m_Controller_RightSecondaryButton = m_Controller.FindAction("RightSecondaryButton", throwIfNotFound: true);
        m_Controller_LeftPrimaryButton = m_Controller.FindAction("LeftPrimaryButton", throwIfNotFound: true);
        m_Controller_RightPrimaryButton = m_Controller.FindAction("RightPrimaryButton", throwIfNotFound: true);
        m_Controller_MenuButton = m_Controller.FindAction("MenuButton", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Controller
    private readonly InputActionMap m_Controller;
    private IControllerActions m_ControllerActionsCallbackInterface;
    private readonly InputAction m_Controller_LeftSecondaryButton;
    private readonly InputAction m_Controller_RightSecondaryButton;
    private readonly InputAction m_Controller_LeftPrimaryButton;
    private readonly InputAction m_Controller_RightPrimaryButton;
    private readonly InputAction m_Controller_MenuButton;
    public struct ControllerActions
    {
        private @GameInput m_Wrapper;
        public ControllerActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftSecondaryButton => m_Wrapper.m_Controller_LeftSecondaryButton;
        public InputAction @RightSecondaryButton => m_Wrapper.m_Controller_RightSecondaryButton;
        public InputAction @LeftPrimaryButton => m_Wrapper.m_Controller_LeftPrimaryButton;
        public InputAction @RightPrimaryButton => m_Wrapper.m_Controller_RightPrimaryButton;
        public InputAction @MenuButton => m_Wrapper.m_Controller_MenuButton;
        public InputActionMap Get() { return m_Wrapper.m_Controller; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ControllerActions set) { return set.Get(); }
        public void SetCallbacks(IControllerActions instance)
        {
            if (m_Wrapper.m_ControllerActionsCallbackInterface != null)
            {
                @LeftSecondaryButton.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnLeftSecondaryButton;
                @LeftSecondaryButton.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnLeftSecondaryButton;
                @LeftSecondaryButton.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnLeftSecondaryButton;
                @RightSecondaryButton.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnRightSecondaryButton;
                @RightSecondaryButton.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnRightSecondaryButton;
                @RightSecondaryButton.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnRightSecondaryButton;
                @LeftPrimaryButton.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnLeftPrimaryButton;
                @LeftPrimaryButton.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnLeftPrimaryButton;
                @LeftPrimaryButton.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnLeftPrimaryButton;
                @RightPrimaryButton.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnRightPrimaryButton;
                @RightPrimaryButton.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnRightPrimaryButton;
                @RightPrimaryButton.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnRightPrimaryButton;
                @MenuButton.started -= m_Wrapper.m_ControllerActionsCallbackInterface.OnMenuButton;
                @MenuButton.performed -= m_Wrapper.m_ControllerActionsCallbackInterface.OnMenuButton;
                @MenuButton.canceled -= m_Wrapper.m_ControllerActionsCallbackInterface.OnMenuButton;
            }
            m_Wrapper.m_ControllerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @LeftSecondaryButton.started += instance.OnLeftSecondaryButton;
                @LeftSecondaryButton.performed += instance.OnLeftSecondaryButton;
                @LeftSecondaryButton.canceled += instance.OnLeftSecondaryButton;
                @RightSecondaryButton.started += instance.OnRightSecondaryButton;
                @RightSecondaryButton.performed += instance.OnRightSecondaryButton;
                @RightSecondaryButton.canceled += instance.OnRightSecondaryButton;
                @LeftPrimaryButton.started += instance.OnLeftPrimaryButton;
                @LeftPrimaryButton.performed += instance.OnLeftPrimaryButton;
                @LeftPrimaryButton.canceled += instance.OnLeftPrimaryButton;
                @RightPrimaryButton.started += instance.OnRightPrimaryButton;
                @RightPrimaryButton.performed += instance.OnRightPrimaryButton;
                @RightPrimaryButton.canceled += instance.OnRightPrimaryButton;
                @MenuButton.started += instance.OnMenuButton;
                @MenuButton.performed += instance.OnMenuButton;
                @MenuButton.canceled += instance.OnMenuButton;
            }
        }
    }
    public ControllerActions @Controller => new ControllerActions(this);
    public interface IControllerActions
    {
        void OnLeftSecondaryButton(InputAction.CallbackContext context);
        void OnRightSecondaryButton(InputAction.CallbackContext context);
        void OnLeftPrimaryButton(InputAction.CallbackContext context);
        void OnRightPrimaryButton(InputAction.CallbackContext context);
        void OnMenuButton(InputAction.CallbackContext context);
    }
}
